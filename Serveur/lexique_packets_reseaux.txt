Rappel :

Un paquet est une chaine de caractère qui est envoyé par un serveur à un client ou par un client à un serveur.
Dans ce projet chaque paquet aura un TYPE qui permettra de determiner à quoi sert le paquet et un MESSAGE qui incarne le corps principal du paquet.

le type et le message sont séparés SYSTEMATIQUEMENT par le premier symbole "=" du paquet.

exemple "join_lobby=123354" 

les différents types existants sont les suivants :

get_lobbys   = "" :         envoyé par le client qui veut avoir les informations des lobbys dispos
join_lobby   = "lobby id" : client souhaitant rejoindre un lobby avec l'id *lobby_id
create_lobby = "[arguments du lobby]" : client souhaitant creer un lobby. le message est sous forme d'une liste respectant l'ordre des arguments des lobbys.
get_players_pseudos = "" : un client souhaitant récupérer les noms des joueurs présents envoyés sous forme de liste.
players_count = "" : client souhaitant récupérer le nombre de joueurs du lobby
get_players_infos = "[[id,pseudo,chips,link],[id,..]]" : un client souhaitant récupérer les infos des joueurs
get_sits_info = "[[sit_id, idplayer, pseudo, chips, link],[sit_id, None],]" : un client souhaitant récupérer les infos des sièges
sit_down = "id_siege" : un client souhaitant s'asseoir à un siège.
pwd="" : un client souhaitant savoir l'entité à laquelle il est connecté
go_main="" : un client souhaitant retourner à main

lobbys = "[liste des lobbys];func_id" : envoyé par le serveur, liste des informations principales de chaque lobby public
redirect = "host:port" : envoyé par le serveur souhaitant rediriger le client à un lobby
404_lobby_not_exist = "id lobby" : renvoyé lorsque l'id de lobby demandé n'existe pas (lobbys publics et privés)
players_pseudos = "[nom des joueurs]" : lobby envoyant la liste des pseudos des joueurs présents
players_count = "count" : lobby envoyant le nombre de joueurs présents
new_player_joined = "nom du joueur" : envoyé par le lobby à l'arrivée d'un nouveau joueur, le client va alors se créer un message d'arrivée de nouveau joueur
sits_infos = "[[id_sit, None],[id_sit,player_pseudo,player_chips,player_link]];func_id" : envoyé par un lobby souhaitant communiquer les informations des sièges.
pwd="" : un serveur ou lobby envoyant s'identifiant à un client
start_timer="20 : dit au client de lancer le timer avant que la game commence (avec x secondes)
stop_timer="" : dit au client d'arreter le timer car il y a moins de 2 joueurs assis
bet="200" : envoie au client le montant de la mise courante
prefolp= : indique au client qu'on est au début du preflop
flop="['td','9h','1s']" envoie au client les cartes qui constituent le flop et indiquent qu'un flop est en train d'avoir lieu
turn="['1h']" envoie au client les cartes qui constituent le turn et indiquent qu'un turn est en train d'avoir lieu
river="['2c']" envoie au client les cartes qui constituent le turn et indiquent qu'un turn est en train d'avoir lieu
your_turn= indique à un client que c'est à son tour de jouer

à faire ...


game_start="" : previent le client que la game commence avec tous les joueurs qui sont assis
pots="[[],[],...]" : liste des pots triés dans l'ordre de priorité 
sit_to_play=7 : indique à tous les joueurs la personne (et donc le numéro de siège à aui c'est de jouer)
action=7,raise,700 indique à tous les joueurs que le siège n°7 à qui c'etait de jouer à relancé à un montant de 700 (est toujours suivi de bet et pots pour mettre à jour ces infos)
sit_to_play_time_to_play=7,10 : il reste 10 secondes au siège index 7 pour jouer son coup.
sit_index_deconnected=2 : indique : le joueur du siège d'index 2 est deconnecté.
sit_up_next_round= un client indique au serveur qu'il veut se lever à la fin du sit_up_next_round
cancel_sit_up_next_round= le client indique qu'il ne veut plus se lever au tour suivant